<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="Common">
	<property environment="env" />
	<property name="ECLIPSE_HOME" value="F:/eclipse1.8/eclipse/" />
	<property name="NBAGameServer.location" value="../NBAGameServer" />
	<property name="PKNodeServer.location" value="../PKNodeServer" />
	<property name="GameCode.location" value="../GameCode" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	<property name="lib.dir" value="lib"/>
	<property name="src.dir" value="src"/>
	<property name="classes.dir" value="bin"/>
	
	<property name="output.dir" value="../CrossNodeServer/lib"/>

	<property name="jarname" value="common.jar"/>
	<property name="project.name" value="Common"/>
	
	<path id="JUnit 4.libraryclasspath">
		<pathelement location="${ECLIPSE_HOME}plugins/org.junit_4.11.0.v201303080030/junit.jar" />
		<pathelement location="${ECLIPSE_HOME}plugins/org.hamcrest.core_1.3.0.v201303031735.jar" />
	</path>
	<path id="Common.classpath">
		<pathelement location="bin" />
		<pathelement location="lib/commons-codec-1.9.jar" />
		<pathelement location="lib/guava-19.0.jar" />
		<pathelement location="lib/joda-time-2.9.1.jar" />
		<pathelement location="lib/protobuf-java-2.4.1.jar" />
		<path refid="GameCode.classpath" />
	</path>
	<target name="init">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.xtend" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin" />
	</target>
	<target depends="clean" name="cleanall">
		<ant antfile="build.xml" dir="${GameCode.location}" inheritAll="false" target="clean" />
	</target>
	<target depends="jar" name="build" />
	<!-- 第三方jar包的路径 -->
	<path id="lib-classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- 2. 编译 -->
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" debug="true" debuglevel="source,lines,vars">
			<compilerarg line="-encoding UTF-8" />
			<classpath refid="lib-classpath" />
		</javac>
	</target>

	<!-- 3. 打包jar文件 -->
	<target name="jar" depends="compile">
		<copy todir="${output.dir}">
			<fileset dir="${lib.dir}" />
		</copy>

		<!--Create a property containing all .jar files,refix lib/, and seperated with a space-->
		<pathconvert property="mf.classpath" pathsep="">
			<mapper>
				<chainedmapper>
					<!-- jar包文件只留文件名，去掉目录信息 -->
					<flattenmapper />
					<!-- add lib/ prefix -->
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>
			<path refid="lib-classpath" />
		</pathconvert>

		<!-- jar文件的输出路径 -->
		<jar destfile="${output.dir}/${jarname}" basedir="${classes.dir}">
		</jar>
	</target>



</project>
